import { motion } from 'framer-motion';

export interface AnimatedLogoProps {
  width?: number;
  height?: number;
  variant: 'black' | 'white'; // Control prop
}

// Variants for the container group to control staggering
const containerVariants = {
  black: {
    transition: {
      staggerChildren: 0.015, // Delay between each path starting its animation (adjust for speed)
    },
  },
  white: {
    transition: {
      staggerChildren: 0.015,
    },
  },
};

// Variants for each individual path
const pathVariants = {
  black: {
    fill: '#000000',
    scale: [1, 1.03, 1], // Keyframes: Normal -> Slightly Larger -> Normal (Pulse)
    transition: {
      fill: { duration: 0.4, ease: 'easeInOut' }, // Control fill transition separately
      scale: { duration: 0.4, times: [0, 0.5, 1], ease: 'easeOut' }, // Control scale pulse timing
    },
  },
  white: {
    fill: '#FFFFFF',
    scale: [1, 1.03, 1], // Keyframes: Normal -> Slightly Larger -> Normal (Pulse)
    transition: {
      fill: { duration: 0.4, ease: 'easeInOut' },
      scale: { duration: 0.4, times: [0, 0.5, 1], ease: 'easeOut' },
    },
  },
};

export function AnimatedLogo({
  width = 260,
  height = 80,
  variant,
}: AnimatedLogoProps) {
  // Store path data in an array for easier mapping if preferred,
  // but listing them directly is also fine.
  const pathData = [
    "M52.21,63.19c0-9.35.07-19.08.38-25.08h-.08c-2.69,10.02-7.79,25.92-14.18,45.86h-11.59c-4.97-17.48-10.67-35.57-13.54-45.85h-.08c.4,6.3.9,16.84.9,26.08v19.76H2.17V29.73h19.02c5.45,16.79,10.45,31.52,12.07,38.95h.08c2.3-8.55,7.19-22.8,12.47-38.95h19.1v54.23h-12.69v-20.77Z",
    "M99.52,75.36c-.94,4.48-1.54,7.27-1.7,8.6h-4c.09-1.09.5-3,.86-4.64-2.01,3.23-5.28,5.43-11.57,5.43-7.31,0-9.79-4.42-9.79-8.12,0-8.79,10.29-9.62,15.12-10.07,2.34-.23,6.6-.23,8.9-.24l.21-.98c.74-3.56-.2-7.1-7.06-7.1-5.4,0-7.92,1.77-8.92,5.18h-4.12c.96-4.36,4.17-8.53,13.4-8.53s11.96,4.99,10.72,10.8l-2.04,9.67ZM96.75,69.49c-3.65,0-6.19.07-8.5.29-5.34.47-10.62,1.58-10.62,6.49,0,2.97,2.31,4.94,6.45,4.94,7.54,0,10.82-3.99,12.48-10.88l.2-.84Z",
    "M110.75,54.99c0-3.6,0-7.21-.08-10.81h12.29c.21,1.41.37,5.81.37,7.95,2.22-5.24,7.08-9.17,15.34-8.96v11.45c-9-.15-15.34,3.47-15.34,14.81v14.54h-12.58v-28.97Z",
    "M144.82,83.96c.11-2.53.17-8.32.17-11.81v-2.68c0-3.09-.06-4.84-.17-7.09l-3.47-.51v-2.21l11.78-3.74.97.6-.17,8.16v7.46c0,3.49.06,9.28.17,11.81h-9.27ZM156.81,81.34v2.62h-14.92v-2.62l5.21-1.12h4.25l5.46,1.12ZM144.59,47.29c0-2.62,2.12-4.48,4.77-4.48s4.77,1.85,4.77,4.48-2.12,4.48-4.77,4.48-4.77-1.87-4.77-4.48Z",
    "M162.59,83.96c.11-2.53.17-8.32.17-11.81v-2.68c0-3.09-.06-4.84-.17-7.09l-3.47-.51v-2.21l11.78-3.74.97.6-.17,8.16v7.46c0,3.49.06,9.28.17,11.81h-9.27ZM174.57,81.34v2.62h-14.92v-2.62l5.21-1.12h4.25l5.46,1.12ZM162.36,47.29c0-2.62,2.12-4.48,4.77-4.48s4.77,1.85,4.77,4.48-2.12,4.48-4.77,4.48-4.77-1.87-4.77-4.48Z",
    "M202.17,79.6c-3.84,3.25-7.97,4.88-12.38,4.88-3.53,0-6.35-.91-8.46-2.74s-3.16-4.23-3.16-7.2c0-4.22,2.06-7.53,6.19-9.94,4.12-2.41,10.06-3.76,17.81-4.08v-1.97c0-2.44-.11-4.43-.33-5.98-.22-1.55-.53-2.71-.94-3.49-.47-.91-1.13-1.63-1.99-2.18-.86-.55-1.79-.82-2.79-.82-1.47,0-2.62.48-3.47,1.43-.84.95-1.38,2.43-1.59,4.43-.25,1.97-.66,3.3-1.22,4.01s-1.53,1.05-2.91,1.05c-1.06,0-1.95-.38-2.67-1.12-.72-.75-1.08-1.72-1.08-2.91,0-1.59.58-3.04,1.73-4.34,1.16-1.3,2.76-2.32,4.8-3.07,2.05-.75,4.29-1.12,6.73-1.12,3.16,0,5.92.63,8.3,1.9,2.37,1.27,4.14,3.02,5.3,5.27.62,1.16,1.07,2.45,1.34,3.89.26,1.44.4,3.42.4,5.95v13.5c0,2.59.38,4.44,1.15,5.53.77,1.09,2.21,1.83,4.34,2.2v1.27h-15.09v-4.36ZM191.86,83.16c-5.31-1.09-7.97-4-7.97-8.72,0-3.06,1.23-5.69,3.7-7.88,1.09-.97,3.2-2.2,6.33-3.7-3.78.72-6.72,1.7-8.81,2.95-3.56,2.19-5.34,5.08-5.34,8.67,0,2.59.94,4.7,2.84,6.3,1.89,1.61,4.34,2.41,7.34,2.41.72,0,1.36-.01,1.92-.05ZM191.86,46.13c-2.19.56-3.95,1.48-5.27,2.74-1.33,1.27-1.99,2.68-1.99,4.24,0,.59.14,1.06.42,1.41.28.34.66.52,1.12.52.44,0,.77-.13.98-.4.22-.26.41-.8.56-1.62.34-1.75.79-3.07,1.34-3.96.55-.89,1.49-1.87,2.84-2.93ZM202.17,77.54v-15.52c-3.03.47-5.63,1.25-7.81,2.34-2.17,1.09-3.84,2.48-4.99,4.17-1.16,1.69-1.73,3.55-1.73,5.58s.62,3.77,1.85,5.13c1.23,1.36,2.79,2.04,4.66,2.04,2.31,0,4.98-1.25,8.02-3.75ZM203.77,81.9h6.94l-1.08-.84c-.09-.09-.16-.14-.19-.14l-.61-.47c-.47-.47-.7-1.06-.7-1.78v-.94l-.05-.47v-15.94c0-4.34-.5-7.59-1.5-9.75-1.41-2.87-3.61-4.72-6.61-5.53,2,1.41,3.17,3.64,3.52,6.7.19,1.88.28,4.78.28,8.72v20.44Z",
    "M246.38,67.83c1.56,4.68,5.3,7.76,14.3,7.76,8.43,0,10.87-2.57,10.87-6.07,0-3.74-2.5-5.84-13.93-7.78-18.82-3.22-22.24-9.33-22.24-16.6,0-10.83,10.43-16.36,23.25-16.36,18.61,0,23.66,9.57,24.28,15.87h-13.18c-.77-2.69-2.57-6.28-11.52-6.28-6.27,0-9.45,2-9.45,5.5,0,3.13,2.23,4.71,12.41,6.54,20.6,3.7,23.83,9.92,23.83,17.78,0,9.4-7.38,17-25.56,17-16.96,0-24.61-7.57-26.25-17.34h13.19Z",
    "M303.49,41.68l-4.22,19.64c1.74-2.46,4.93-6.32,11.47-6.32s10.2,3.75,8.42,12.08l-3.61,16.99h-4.04l3.44-16.29c1.1-5.25.39-9.15-5.73-9.15s-10.38,4.98-12,12.78l-2.69,12.67h-4.03l8.97-42.39h4.02Z",
    "M352.72,68.41c2.32-.68,6.31-1.73,8.96-2.36v2.35c-2.65.67-5.69,1.49-7.33,2.25-2.55,1.08-4.2,2.97-4.2,5.61,0,2.82,1.48,4.12,3.38,4.12,1.08,0,1.96-.45,3.75-1.76l2.26-1.7.58.82-2.36,2.56c-2.72,2.89-4.47,4.62-8.55,4.62-4.35,0-7.37-2.56-7.37-7.19,0-4,2.21-6.82,10.89-9.33ZM357,79.47v-14.08c0-4.98-.97-6.45-4.56-6.45-1.37,0-2.82.17-5.26.81l3.87-2.19-.41,3.9c-.14,3.74-1.96,5.25-4.12,5.25-2,0-3.35-.96-3.79-2.82.3-4.68,4.82-7.85,12.92-7.85,7.21,0,10.06,3.05,10.06,10.58v12.61c0,1.11.46,1.64,1.27,1.64.59,0,1.05-.3,1.71-1.24l1.49.99c-1.35,3.07-3.35,4.25-6.77,4.25-3.82,0-5.93-2.01-6.42-5.41Z",
    "M398.78,75.18c-1.84,4.85-5.72,9.68-14.42,9.68s-12.24-5.85-12.24-12.53c0-8.77,5.85-17.33,15.96-17.33,9.36,0,11.95,6.17,12.06,10.03h-4.01c-.4-3.2-2.67-6.58-8.42-6.58-7.29,0-11.43,6.8-11.43,13.65,0,5.35,2.7,9.29,8.62,9.29,5.1,0,7.86-2.52,9.77-6.21h4.1Z",
    "M413.51,43.03v15.38c1.28-1.88,3.64-4.11,8.34-4.11,5.43,0,9.75,3.21,9.75,11.11v18.67h-8.01v-17.47c0-3.79-1.34-5.79-4.72-5.79-4.48,0-5.36,3.33-5.36,7.82v15.44h-8.06v-41.04h8.06Z",
    "M452.76,66.22l13.45-11.53c2.16-1.88,3.23-3.44,3.23-4.69,0-1.81-1.67-2.83-5.02-3.05v-1.27h18.05v1.27c-1.88.19-3.77.8-5.7,1.83s-4.12,2.62-6.59,4.78c-.38.31-.64.54-.8.68-.16.14-.27.23-.33.26l-5.02,4.22,11.86,15.98.89,1.22c1.75,2.31,3.33,3.99,4.76,5.04,1.42,1.05,3.01,1.66,4.76,1.85v1.27h-24.42v-1.27c3.34-.22,5.02-1.2,5.02-2.95,0-1-.63-2.36-1.88-4.08l-.75-1.03-7.31-10.08-4.22,3.61v6.8c0,2.59.38,4.44,1.15,5.53.77,1.09,2.21,1.83,4.34,2.2v1.27h-20.58v-1.27c2.12-.38,3.58-1.1,4.36-2.18.78-1.08,1.17-2.93,1.17-5.55V29.79c0-2.62-.4-4.49-1.2-5.6s-2.24-1.82-4.34-2.13v-1.03l15.09-1.73v46.92ZM442.36,82.01h9.38l-1.12-.84c-.06-.06-.12-.11-.19-.14l-.61-.47c-.44-.44-.67-1.03-.7-1.78V21.26l-7.69.84,1.83,1.31s.09.05.19.14l.61.47c.31.22.52.54.61.96s.14,1.16.14,2.23v50.16c0,1.28-.06,2.08-.19,2.39-.12.31-.5.73-1.12,1.27-.09.06-.14.11-.14.14l-.98.84ZM478.26,81.92c-1.88-1.03-3.88-3-6-5.91l-11.02-15.05-3.09,2.67,7.92,10.83c1.59,2.22,2.39,3.95,2.39,5.2,0,.78-.34,1.53-1.03,2.25h10.83ZM470.72,51.03c1.34-1.34,2.91-2.64,4.69-3.89h-6.19c1.12.91,1.69,1.83,1.69,2.77,0,.12-.06.5-.19,1.12Z",
    "M534.3,64.15c0,12.25-8.46,21-23.24,21s-22.39-9.96-22.39-21,7.84-20.95,22.91-20.95,22.72,11.07,22.72,20.94ZM501.47,64.16c0,6.19,3.43,11.5,10.02,11.5s9.87-5.23,9.87-11.3-2.99-11.66-9.97-11.66-9.92,5.32-9.92,11.45Z",
    "M327.02,47.15c2.71,8.43,3.98,12.7,4.83,16.76h.16c.81-3.57,2.26-8.98,4.61-16.76h10.57l-9.62,24.74h-12.21l-9.56-24.74h11.24Z",
  ];

  return (
    <svg
      width={width}
      height={height}
      xmlns="http://www.w3.org/2000/svg"
      id="Layer_1"
      version="1.1"
      viewBox="0 0 536.87 106.47"
      role="img"
      aria-label={variant === 'black' ? 'Company Logo Black' : 'Company Logo White'}
      // Preserve aspect ratio if needed, though viewBox handles it
      // preserveAspectRatio="xMidYMid meet"
    >
      {/* Container to orchestrate stagger */}
      <motion.g
         variants={containerVariants}
         initial={variant} // Set initial state directly without animation
         animate={variant} // Animate to the target variant ('black' or 'white')
      >
        {/* Map over path data or list each path individually */}
        {pathData.map((pathD, index) => (
          <motion.path
            key={index} // Use index as key if paths are stable
            d={pathD}
            variants={pathVariants}
            // No need for initial/animate here, inherits from parent `animate` prop
            // Add transform-origin if scale looks weird (defaults to center)
            // style={{ transformOrigin: "center center" }}
          />
        ))}
      </motion.g>
    </svg>
  );
}
